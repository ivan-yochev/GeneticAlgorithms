# https://www.youtube.com/@codeinaction1525/playlists

# В тази глава ще научите как генетичните алгоритми могат да бъдат използвани в приложения за комбинаторна оптимизация.

# Ще започнем с описание на търсещите проблеми и комбинаторната оптимизация, като очертаем няколко практически примера за комбинаторни
# оптимизационни проблеми. След това ще анализираме всеки от тези проблеми и ще ги свържем с решения на база Python, използвайки
# рамката DEAP.

# Проблемите за оптимизация, които ще разгледаме:
# Добре известният проблем с раницата (knapsack problem)
# Проблемът на търговския пътник (Traveling Salesman Problem, TSP)
# Проблемът с маршрутизирането на превозни средства (Vehicle Routing Problem, VRP)
# Допълнителни теми:
# Превръщане от генотип към фенотип (genotype-to-phenotype mapping)
# Проучване срещу експлоатация (exploration versus exploitation)
# До края на тази глава ще можете да:
# Разбирате същността на търсещите проблеми и комбинаторната оптимизация
# Решавате проблема с раницата с помощта на генетичен алгоритъм, имплементиран с DEAP
# Решавате TSP с генетичен алгоритъм, имплементиран с DEAP
# Решавате VRP с генетичен алгоритъм, имплементиран с DEAP
# Разбирате превръщането от генотип към фенотип
# Придобиете познания за концепцията проучване срещу експлоатация и връзката ѝ с елитизма


# Търсещи проблеми и комбинаторна оптимизация

# Една от обичайните области за приложение на генетичните алгоритми са търсещите проблеми, които имат важни приложения в области
# като логистика, операции, изкуствен интелект и машинно обучение.

# Примери включват:

# Определяне на оптимални маршрути за доставка на пратки
# Проектиране на авиолинии с хъб-базирани мрежи
# Управление на инвестиционни портфейли
# Разпределяне на пътници към налични шофьори в автопарк от таксита
# Търсещите алгоритми се фокусират върху решаването на даден проблем чрез методично оценяване на състояния и преходи между състояния,
# с цел намиране на път от началното състояние до желано финално (или "целево") състояние.
# Обикновено при всеки преход между състояния има свързана цена или печалба, а целта на съответния търсещ алгоритъм е да намери път, 
# който минимизира цената или максимизира печалбата.

# Тъй като оптималният път е само един от многото възможни, този вид търсене е свързан с комбинаторната оптимизация – област, 
# която включва намирането на оптимален обект от краен, но често изключително голям набор от възможни обекти.

# Тези концепции ще бъдат илюстрирани, докато се запознаваме с проблема с раницата, който е основният фокус на следващия раздел.

#page 84